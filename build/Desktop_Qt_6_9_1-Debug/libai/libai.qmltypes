import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "qnetworkrequest.h"
        name: "QNetworkRequest"
        accessSemantics: "value"
        Enum {
            name: "KnownHeaders"
            values: [
                "ContentTypeHeader",
                "ContentLengthHeader",
                "LocationHeader",
                "LastModifiedHeader",
                "CookieHeader",
                "SetCookieHeader",
                "ContentDispositionHeader",
                "UserAgentHeader",
                "ServerHeader",
                "IfModifiedSinceHeader",
                "ETagHeader",
                "IfMatchHeader",
                "IfNoneMatchHeader",
                "NumKnownHeaders"
            ]
        }
    }
    Component {
        file: "responsesrequestutils.h"
        name: "ai::AiBase"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["libai/AiBase 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Property {
            name: "utilityType"
            type: "ai::UtilityType"
            read: "utilityType"
            index: 0
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Property {
            name: "extra"
            type: "QJsonObject"
            read: "extra"
            index: 1
            isReadonly: true
            isFinal: true
        }
        Property { name: "empty"; type: "bool"; read: "isEmpty"; index: 2; isReadonly: true; isFinal: true }
        Property { name: "valid"; type: "bool"; read: "isValid"; index: 3; isReadonly: true; isFinal: true }
    }
    Component {
        file: "responsesrequestutils.h"
        name: "ai::AiItemReference"
        accessSemantics: "reference"
        prototype: "ai::AiBase"
        exports: ["libai/AiItemReference 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "id"; type: "QString"; read: "id"; write: "setId"; index: 0; isFinal: true }
    }
    Component {
        file: "responsesrequestutils.h"
        name: "ai::Base"
        accessSemantics: "value"
        Property {
            name: "utilityType"
            type: "ai::UtilityType"
            read: "utilityType"
            index: 0
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Property {
            name: "extra"
            type: "QJsonObject"
            read: "extra"
            index: 1
            isReadonly: true
            isFinal: true
        }
        Property { name: "empty"; type: "bool"; read: "isEmpty"; index: 2; isReadonly: true; isFinal: true }
        Property { name: "valid"; type: "bool"; read: "isValid"; index: 3; isReadonly: true; isFinal: true }
    }
    Component {
        file: "client.h"
        name: "ai::Client"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["libai/Client 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Signal { name: "apiKeyChanged" }
        Signal { name: "apiUrlChanged" }
        Signal {
            name: "errorOccurred"
            Parameter { name: "error"; type: "ai::Error" }
        }
        Signal {
            name: "responseErrorOccurred"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
            Parameter { name: "error"; type: "ai::Error" }
        }
        Signal {
            name: "responseRequestSent"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
        }
        Signal {
            name: "responseReadyRead"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
        }
        Signal {
            name: "responseFinished"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
        }
        Signal {
            name: "responseTextGenerated"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
            Parameter { name: "text"; type: "QString" }
        }
        Signal {
            name: "responseImageGenerated"
            Parameter { name: "response"; type: "ai::Response"; isPointer: true }
            Parameter { name: "image"; type: "QImage" }
        }
        Signal { name: "tokenProviderChanged" }
        Signal { name: "networkAccessManagerChanged" }
    }
    Component {
        file: "imagesresponse.h"
        name: "ai::ImagesResponse"
        accessSemantics: "reference"
        prototype: "ai::Response"
        exports: ["libai/ImagesResponse 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
    }
    Component {
        file: "responsesrequestutils.h"
        name: "ai::Input"
        accessSemantics: "value"
        prototype: "ai::Base"
        exports: ["libai/aiInput 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Property {
            name: "items"
            type: "InputItem"
            isList: true
            read: "items"
            write: "setItems"
            index: 0
        }
    }
    Component {
        file: "request.h"
        name: "ai::Request"
        accessSemantics: "value"
        prototype: "QNetworkRequest"
        exports: ["libai/request 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Attribute"
            values: [
                "IdAttribute",
                "ApiKeyAttribute",
                "UrlAttribute",
                "NumAttributes"
            ]
        }
        Enum {
            name: "Error"
            values: ["NoError", "NetworkError", "SslError"]
        }
        Property { name: "url"; type: "QUrl"; read: "url"; write: "setUrl"; index: 0; isFinal: true }
        Property { name: "id"; type: "QString"; read: "id"; write: "setId"; index: 1; isFinal: true }
        Property {
            name: "apiKey"
            type: "QByteArray"
            read: "apiKey"
            write: "setApiKey"
            index: 2
            isFinal: true
        }
    }
    Component {
        file: "response.h"
        name: "ai::Response"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["libai/Response 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Attribute"
            values: ["IdAttribute", "NumAttributes"]
        }
        Property {
            name: "id"
            type: "QString"
            read: "id"
            write: "setId"
            notify: "idChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "isRunning"
            type: "bool"
            read: "isRunning"
            notify: "runningChanged"
            index: 1
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "isFinished"
            type: "bool"
            read: "isFinished"
            notify: "finishedChanged"
            index: 2
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "client"
            type: "Client"
            isPointer: true
            read: "client"
            index: 3
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Property {
            name: "request"
            type: "Request"
            read: "request"
            index: 4
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Signal { name: "requestSent" }
        Signal { name: "readyRead" }
        Signal { name: "finished" }
        Signal {
            name: "errorOccurred"
            Parameter { name: "error"; type: "ai::Error" }
        }
        Signal { name: "idChanged" }
        Signal { name: "runningChanged" }
        Signal { name: "finishedChanged" }
    }
    Component {
        file: "responsesclient.h"
        name: "ai::ResponsesClient"
        accessSemantics: "reference"
        prototype: "ai::Client"
        exports: ["libai/ResponsesClient 1.0"]
        exportMetaObjectRevisions: [256]
        Method {
            name: "post"
            type: "ResponsesResponse"
            isPointer: true
            Parameter { name: "request"; type: "ResponsesRequest" }
        }
    }
    Component {
        file: "responsesrequest.h"
        name: "ai::ResponsesRequest"
        accessSemantics: "value"
        prototype: "ai::Request"
        exports: ["libai/responsesRequest 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Attribute"
            values: [
                "BackgroundAttribute",
                "ConversationAttribute",
                "IncludeAttribute",
                "InputAttribute",
                "InstructionsAttribute",
                "MaxOutputTokensAttribute",
                "MaxToolCallsAttribute",
                "MetadataAttribute",
                "ModelAttribute",
                "ParallelToolCallsAttribute",
                "PreviousResponseIdAttribute",
                "PromptAttribute",
                "PromptCacheKeyAttribute",
                "ReasoningAttribute",
                "SafetyIdentifierAttribute",
                "ServiceTierAttribute",
                "StoredAttribute",
                "StreamingAttribute",
                "StreamOptionsAttribute",
                "TemperatureAttribute",
                "TextAttribute",
                "ToolChoiceAttribute",
                "ToolsAttribute",
                "TopLogprobsAttribute",
                "TopPAttribute",
                "TruncationAttribute",
                "NumAttributes"
            ]
        }
        Enum {
            name: "Model"
            values: [
                "Model_Gpt5",
                "Model_Gpt5Nano",
                "Model_Gpt5Mini",
                "Model_Gpt5Pro",
                "Model_Gpt41",
                "Model_Gpt41Mini",
                "Model_Custom"
            ]
        }
        Enum {
            name: "ServiceTier"
            values: [
                "ServiceTier_Auto",
                "ServiceTier_Default",
                "ServiceTier_Flex",
                "ServiceTier_Priority",
                "ServiceTier_Custom"
            ]
        }
        Enum {
            name: "Truncation"
            values: [
                "Truncation_Auto",
                "Truncation_Disabled",
                "Truncation_Custom"
            ]
        }
        Property {
            name: "background"
            type: "bool"
            read: "background"
            write: "setBackground"
            index: 0
            isFinal: true
        }
        Property {
            name: "input"
            type: "ai::Input"
            read: "input"
            write: "setInput"
            index: 1
            isFinal: true
        }
        Property {
            name: "instructions"
            type: "QString"
            read: "instructions"
            write: "setInstructions"
            index: 2
            isFinal: true
        }
        Property {
            name: "previousResponseId"
            type: "QString"
            read: "previousResponseId"
            write: "setPreviousResponseId"
            index: 3
            isFinal: true
        }
        Method {
            name: "setInput"
            type: "bool"
            Parameter { name: "text"; type: "QString" }
        }
    }
    Component {
        file: "responsesresponse.h"
        name: "ai::ResponsesResponse"
        accessSemantics: "reference"
        prototype: "ai::Response"
        exports: ["libai/ResponsesResponse 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Attribute"
            values: [
                "BackgroundAttribute",
                "ConversationAttribute",
                "CreatedAtAttribute",
                "ErrorAttribute",
                "IncompleteDetailsAttribute",
                "InstructionsAttribute",
                "MaxOutputTokensAttribute",
                "MaxToolCallsAttribute",
                "MetadataAttribute",
                "ModelAttribute",
                "ObjectAttribute",
                "OutputAttribute",
                "OutputTextAttribute",
                "ParallelToolCallsAttribute",
                "PreviousResponseIdAttribute",
                "PromptAttribute",
                "PromptCacheKeyAttribute",
                "ReasoningAttribute",
                "SafetyIdentifierAttribute",
                "ServiceTierAttribute",
                "StatusAttribute",
                "TemperatureAttribute",
                "TextAttribute",
                "ToolChoiceAttribute",
                "ToolsAttribute",
                "TopLogprobsAttribute",
                "TopPAttribute",
                "TruncationAttribute",
                "UsageAttribute",
                "NumAttributes"
            ]
        }
        Enum {
            name: "Status"
            values: [
                "Status_Completed",
                "Status_Failed",
                "Status_InProgress",
                "Status_Cancelled",
                "Status_Queued",
                "Status_Incomplete",
                "Status_Custom"
            ]
        }
        Signal {
            name: "textGenerated"
            Parameter { name: "text"; type: "QString" }
        }
        Signal {
            name: "imageGenerated"
            Parameter { name: "image"; type: "QImage" }
        }
        Signal { name: "backgroundChanged" }
        Signal { name: "conversationChanged" }
        Signal { name: "inputChanged" }
        Signal { name: "reasoningChanged" }
        Signal { name: "metadataChanged" }
        Signal { name: "modelChanged" }
        Signal { name: "streamingChanged" }
        Signal { name: "streamOptionsChanged" }
    }
}
